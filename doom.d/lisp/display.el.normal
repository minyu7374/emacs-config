;; Doom exposes five (optional) variables for controlling fonts in Doom. Here
;; are the three important ones:
;;
;; + `doom-font'
;; + `doom-variable-pitch-font'
;; + `doom-big-font' -- used for `doom-big-font-mode'; use this for
;;   presentations or streaming.
;;
;; They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
;; font string. You generally only need these two:
;; (setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light)
;;       doom-variable-pitch-font (font-spec :family "sans" :size 13))
;; 中英文对齐 参考 https://emacs-china.org/t/org-mode/440/9
(defun set-font()
  (interactive)
  (let ((default-font "Consolas")
        ;; (chinese-font "FZTieJinLiShu-S17S")
        (chinese-font "Microsoft YaHei")
        (default-font-size 13)
        (big-font-size 18)
        (chinese-font-rescale 1.1))

    (setq doom-big-font (font-spec :family default-font :slant 'italic :size big-font-size)
          doom-variable-pitch-font (font-spec :family default-font :slant 'italic :size default-font-size)
          doom-serif-font (font-spec :family default-font :slant 'italic :weight 'light))
    (set-face-attribute 'default nil :font (format "%s:pixelsize=%d" default-font default-font-size) :slant 'italic)
    (dolist (charset '(kana han symbol cjk-misc bopomofo))
      (set-fontset-font (frame-parameter nil 'font) charset
                        (font-spec :family chinese-font)))
    (setq face-font-rescale-alist `((,chinese-font . ,chinese-font-rescale)))
    )
  )

;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function. This is the default:
;; (setq doom-theme 'doom-dracula)
(if (display-graphic-p)
    (progn
      (set-font)
      (setq doom-theme 'doom-dracula))
  (setq doom-theme 'doom-tomorrow-night))

;; fullscreen
(set-frame-parameter nil 'fullscreen 'fullboth)

;; (add-to-list 'initial-frame-alist '(fullscreen . maximized))
;; (add-to-list 'default-frame-alist '(fullscreen . maximized))

;; when using emacs daemon
(add-hook 'after-make-frame-functions
          (lambda (new-frame)
            (select-frame new-frame)
            (set-frame-parameter nil 'fullscreen 'fullboth)
            (if (display-graphic-p)
                (progn
                  (load-theme 'doom-dracula 'no-confirm)
                  (set-font)
                  (doom/reload-font))
              (progn
                (load-theme 'doom-tomorrow-night 'no-confirm)
                (menu-bar-mode -1)))
            ))

(provide 'display)
